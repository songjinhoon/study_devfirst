
/* build.gradle에서 gradle-plugin에 속한 라이브러리(?)와의 의존성을 처리하기 위해(?) -> 하위 요소들이 이걸 참조하나봄(?) 
buildscript {
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}*/

/* java, boot essential */
/*
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management' */ 
plugins {
	id 'java' 
	id 'eclipse'
    id 'idea'
    id 'org.springframework.boot' version '2.4.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group = 'kr.dev'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-devtools' // 자동재시작
    implementation 'commons-io:commons-io:2.4' // FileUtils
    implementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    implementation 'com.h2database:h2'
    // handlebar
    implementation 'pl.allegro.tech.boot:handlebars-spring-boot-starter:0.3.2'
    implementation 'org.beryx:handlebars-java-helpers:0.4.1'
    // thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    /*implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect';
    implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time'*/
    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // mapstruct
    implementation 'org.mapstruct:mapstruct:1.4.1.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.1.Final'
    // querydsl
    compile("com.querydsl:querydsl-core") // querydsl
    compile("com.querydsl:querydsl-jpa") // querydsl
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")
    // 소셜로그인
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    // session store -> DB
    implementation 'org.springframework.session:spring-session-jdbc'
    // Gson
    // implementation 'com.google.code.gson:gson:2.8.2'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

def generated='src/main/generated'
sourceSets {
    main.java.srcDirs += [ generated ]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
    file(generated).deleteDir()
}